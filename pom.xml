<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements. See the NOTICE file distributed with this work for additional
information regarding copyright ownership. The ASF licenses this file to
You under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of
the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
by applicable law or agreed to in writing, software distributed under the
License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
OF ANY KIND, either express or implied. See the License for the specific
language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.sarwarbhuiyan</groupId>
  <artifactId>camel-elasticsearch-http</artifactId>
  <version>0.1.0</version>
  <packaging>bundle</packaging>
  <name>Camel :: ElasticSearch HTTP</name>
  <description>Camel Elasticsearch Component Support using HTTP</description>
  <url>https://github.com/sarwarbhuiyan/camel-elasticsearch-http</url>
  
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Sarwar Bhuiyan</name>
      <email>sarwar.bhuiyan@gmail.com</email>
     </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:sarwarbhuiyan/camel-elasticsearch-http.git</connection>
    <developerConnection>scm:git:git@github.com:sarwarbhuiyan/camel-elasticsearch-http.git</developerConnection>
    <url>git@github.com:sarwarbhuiyan/camel-elasticsearch-http.git</url>
  </scm>
  
  <properties>
    <camel.osgi.export.pkg>com.sarwarbhuiyan.camel.component.elasticsearch.http.*;${camel.osgi.version}</camel.osgi.export.pkg>
    <camel.osgi.export.service>org.apache.camel.spi.ComponentResolver;component=eshttp</camel.osgi.export.service>
   
    <maven-bundle-version>${maven-bundle-plugin-version}</maven-bundle-version>
    <!-- problems by upgrading to maven-bundle-plugin 2.4.0 -->
    <maven-bundle-plugin-version>2.3.7</maven-bundle-plugin-version>
    
    <camel.osgi.import.camel.version>version="[$(version;==;${camel.osgi.version.clean}),$(version;=+;${camel.osgi.version.clean}))"</camel.osgi.import.camel.version>
    <camel.osgi.import.strict.version>version="[$(version;===;${camel.osgi.version.clean}),$(version;==+;${camel.osgi.version.clean}))"</camel.osgi.import.strict.version>
    <camel.osgi.import.default.version>[$(version;==;$(@)),$(version;+;$(@)))</camel.osgi.import.default.version>
    <camel.osgi.import.defaults>
        org.osgi.framework;version="[1.5,2)",
        org.osgi.framework.wiring;version="[1.0,2)",
        org.springframework.ws.*;version="[2,3)",
        org.springframework.xml.*;version="[2,3)",
        org.springframework.*;version="${spring-version-range}",
        org.apache.commons.logging.*;version="[1.1,2)",
        org.apache.cxf.*;version="${cxf-version-range}",
        org.apache.qpid.*;version="[0.20,1)",
        org.apache.abdera.*;version="[0.4,2)",
        org.apache.commons.httpclient.*;version="[3.1,4.0)",
        org.apache.velocity.*;version="[1.6.2,2)",
        org.apache.xmlbeans.*;version="[2.4,3)",
        org.eclipse.jetty.*;version="[8.0,10)",
        com.thoughtworks.xstream.*;version="[1.4.7,2)",
        org.antlr.stringtemplate.*;version="[3.0,4)",
        org.ccil.cowan.tagsoup.*;version="[1.2,2)",
        org.mortbay.cometd.*;version="[6.1,7)",
        org.slf4j.*;version="[1.6,2)",
        net.sf.flatpack.*;version="[3.1.1,4)",
        net.sf.saxon.*;version="[9.3.0,9.6)",
        freemarker.*;version="[2.3.15,3)",
        javax.persistence.*;version="[1.1,3)",
        org.apache.lucene.*;version="${lucene-version-range}",
        org.apache.solr.*;version="${solr-version-range}",
    </camel.osgi.import.defaults>
    <camel.osgi.import.before.defaults />
    <camel.osgi.import.additional />
    <camel.osgi.import.pkg>
        !${camel.osgi.export.pkg},
        org.apache.camel.*;${camel.osgi.import.camel.version},
        ${camel.osgi.import.before.defaults},
        ${camel.osgi.import.defaults},
        ${camel.osgi.import.additional},
        *
    </camel.osgi.import.pkg>
    <camel.osgi.activator />
    <camel.osgi.failok>false</camel.osgi.failok>
    <camel.osgi.private.pkg>!*</camel.osgi.private.pkg>
    <camel.osgi.export>${camel.osgi.export.pkg};${camel.osgi.version}</camel.osgi.export>
    <camel.osgi.version>version=${project.version}</camel.osgi.version>
    <camel.osgi.split.pkg>-split-package:=first</camel.osgi.split.pkg>
    <camel.osgi.import>${camel.osgi.import.pkg}</camel.osgi.import>
    <camel.osgi.dynamic />
    <camel.osgi.symbolic.name>${project.groupId}.${project.artifactId}</camel.osgi.symbolic.name>
    <camel.osgi.exclude.dependencies>false</camel.osgi.exclude.dependencies>
    <camel.osgi.require.capability />
    <camel.osgi.provide.capability />
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
      <version>2.17.0</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>2.22.1</version>
    </dependency>
     <dependency>
      <groupId>org.glassfish.jersey.connectors</groupId>
      <artifactId>jersey-apache-connector</artifactId>
      <version>2.22.1</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>2.5.4</version>
    </dependency>

    <!-- for testing -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test</artifactId>
      <version>2.17.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codelibs</groupId>
      <artifactId>elasticsearch-cluster-runner</artifactId>
      <version>2.0.0.0</version>
      <scope>test</scope>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.13</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
	<!-- Eclipse m2e Lifecycle Management -->
	<plugin>
	  <groupId>org.eclipse.m2e</groupId>
	  <artifactId>lifecycle-mapping</artifactId>
	  <version>${lifecycle-mapping-version}</version>
	  <configuration>
	    <lifecycleMappingMetadata>
	      <pluginExecutions>
		<pluginExecution>
		  <pluginExecutionFilter>
		    <groupId>org.apache.camel</groupId>
		    <artifactId>camel-package-maven-plugin</artifactId>
		    <versionRange>2.17.0</versionRange>
		    <goals>
		      <goal>generate-eips-list</goal>
		    </goals>
		  </pluginExecutionFilter>
		  <action>
		    <ignore />
		  </action>
		</pluginExecution>
	      </pluginExecutions>
	    </lifecycleMappingMetadata>OB
	  </configuration>
	</plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
	<groupId>org.apache.camel</groupId>
	<artifactId>camel-package-maven-plugin</artifactId>
	<version>2.17.0</version>
	<executions>
	  <execution>
	    <id>components</id>
	    <goals>
	      <goal>generate-components-list</goal>
	    </goals>
	    <phase>generate-resources</phase>
	  </execution>
	  <execution>
	    <id>eips</id>
	    <goals>
	      <goal>generate-eips-list</goal>
	    </goals>
	    <phase>process-classes</phase>
	  </execution>
	  <!-- camel-core needs to generate dataformats after compilation -->
	  <execution>
	    <id>dataformats</id>
	    <goals>
	      <goal>generate-dataformats-list</goal>
	    </goals>
	    <phase>process-classes</phase>
	  </execution>
	  <!-- camel-core needs to generate languages after compilation -->
	  <execution>
	    <id>languages</id>
	    <goals>
	      <goal>generate-languages-list</goal>
	    </goals>
	    <phase>process-classes</phase>
	  </execution>
	  <!-- camel-core needs to validate before packaging -->
	  <execution>
	    <id>validate</id>
	    <goals>
	      <goal>validate-components</goal>
	    </goals>
	    <phase>prepare-package</phase>
	  </execution>
	</executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <es.path.data>target/data</es.path.data>
          </systemPropertyVariables>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
        </configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.felix</groupId>
	<artifactId>maven-bundle-plugin</artifactId>
	<version>${maven-bundle-plugin-version}</version>
	<extensions>true</extensions>
	<configuration>
	  <excludeDependencies>${camel.osgi.exclude.dependencies}</excludeDependencies>
	  <instructions>
	    <Bundle-Name>${project.artifactId}</Bundle-Name>
	    <Bundle-SymbolicName>${camel.osgi.symbolic.name}</Bundle-SymbolicName>
	    <Bundle-Activator>${camel.osgi.activator}</Bundle-Activator>
	    <Export-Package>${camel.osgi.export}</Export-Package>
	    <Import-Package>${camel.osgi.import}</Import-Package>
	    <DynamicImport-Package>${camel.osgi.dynamic}</DynamicImport-Package>
	    <Private-Package>${camel.osgi.private.pkg}</Private-Package>
	    <Import-Service>${camel.osgi.import.service}</Import-Service>
	    <Export-Service>${camel.osgi.export.service}</Export-Service>
	    <Require-Capability>${camel.osgi.require.capability}</Require-Capability>
	    <Provide-Capability>${camel.osgi.provide.capability}</Provide-Capability>
	    <Implementation-Title>Apache Camel</Implementation-Title>
	    <Implementation-Version>${project.version}</Implementation-Version>
	    <Karaf-Info>Camel;${project.artifactId}=${project.version}</Karaf-Info>
	    <_versionpolicy>${camel.osgi.import.default.version}</_versionpolicy>
	    <_failok>${camel.osgi.failok}</_failok>
	  </instructions>
	</configuration>
	<executions>
	  <execution>
	    <id>versions</id>
	    <phase>validate</phase>
	    <goals>
	      <goal>cleanVersions</goal>
	    </goals>
	    <configuration>
	      <versions>
		<camel.osgi.version.clean>${project.version}</camel.osgi.version.clean>
	      </versions>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
    </plugins>
  </build>

</project>
